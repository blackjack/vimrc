" Environment {
" vim: set foldmarker={,}  foldmethod=marker"
    set nocompatible        " must be first line
    set background=dark     " Assume a dark background
    filetype off
    set rtp+=~/.vim/bundle/vundle
    call vundle#rc()
" }

" Bundles {
    " Deps
        Bundle 'gmarik/vundle'
        Bundle 'MarcWeber/vim-addon-mw-utils'
        Bundle 'tomtom/tlib_vim'
        if executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Bundle 'mileszs/ack.vim'
        elseif executable('ack')
            Bundle 'mileszs/ack.vim'
        elseif executable('ag')
            Bundle 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column'
        endif

    " General {
          Bundle 'scrooloose/nerdtree'
          Bundle 'Matt-Deacalion/vim-systemd-syntax'
          Bundle 'spf13/vim-colors'
          Bundle 'morhetz/gruvbox'
          Bundle 'tpope/vim-surround'
          Bundle 'kien/ctrlp.vim'
          Bundle 'vim-scripts/sessionman.vim'
          Bundle 'matchit.zip'
          Bundle 'bling/vim-airline'
          Plugin 'luochen1990/rainbow'
          Bundle 'Lokaltog/vim-easymotion'
          Bundle 'jistr/vim-nerdtree-tabs'
          Bundle 'mbbill/undotree'
          Bundle 'vim-scripts/restore_view.vim'
          Bundle 'airblade/vim-gitgutter'
          Bundle 'kopischke/vim-fetch'
          Bundle 'RobbieClarken/vim-haproxy'
    " }
    "
    " General Programming {
          Bundle 'scrooloose/syntastic'
          Bundle 'Valloric/ListToggle'
          Bundle 'tpope/vim-fugitive'
          Bundle 'juneedahamed/svnj.vim'
          Bundle 'mattn/webapi-vim'
          Bundle 'mattn/gist-vim'
          Bundle 'scrooloose/nerdcommenter'
          Bundle 'godlygeek/tabular'
          Bundle 'derekwyatt/vim-fswitch'
          Plugin 'Chiel92/vim-autoformat'
          if executable('ctags')
              Bundle 'majutsushi/tagbar'
              Bundle 'xolox/vim-misc'
              Bundle 'xolox/vim-easytags'
          endif
    " }

    " Snippets & AutoComplete {
          Bundle 'Valloric/YouCompleteMe'
          Plugin 'octol/vim-cpp-enhanced-highlight'
          Bundle 'derekwyatt/vim-protodef'

          "Fallback if YCM is not available
          if isdirectory($HOME."/.vim/bundle/YouCompleteMe")
            let g:loaded_autoload_acp = 1
            let g:loaded_acp = 1
          endif
          Bundle 'vim-scripts/AutoComplPop'
    " }

    " Python {
          Bundle 'python_match.vim'
          Bundle 'pythoncomplete'
          Bundle 'tell-k/vim-autopep8'
    " }


    " HTML {
          Bundle 'amirh/HTML-AutoCloseTag'
          Bundle 'hail2u/vim-css3-syntax'
          Bundle 'tpope/vim-haml'
    " }

    " Go Lang {
          Bundle 'fatih/vim-go'
          Plugin 'nsf/gocode', {'rtp': 'vim/'}
    " }
    "
    " Rust {
          Plugin 'rust-lang/rust.vim'
          Plugin 'racer-rust/vim-racer'
    " }

    " Misc {
          Bundle 'tpope/vim-markdown'
          Bundle 'spf13/vim-preview'
          Bundle 'Puppet-Syntax-Highlighting'
          Bundle 'elzr/vim-json'
          Bundle 'chrisbra/csv.vim'
    " }

" }

" General {
    " set autowrite                  " automatically write a file when leaving a modified buffer
    set shortmess+=filmnrxoOtT      " abbrev. of messages (avoids 'hit enter')
" }

